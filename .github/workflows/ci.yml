name: Python Tests for C# API / CI

on:
  pull_request:
    branches:
      - main
      - development

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      api:
        image: mcr.microsoft.com/dotnet/aspnet:8.0
        ports:
          - 5000:5000
        env:
          ASPNETCORE_ENVIRONMENT: Development

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up .NET environment
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      # Cache .NET dependencies
      - name: Cache .NET dependencies
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}

      # Install dependencies and build API
      - name: Install dependencies and build API
        run: |
          dotnet restore Cargohub/Cargohub.csproj
          dotnet build Cargohub/Cargohub.csproj --no-restore
          dotnet restore Cargohub.Tests/Cargohub.Tests.csproj
          dotnet build Cargohub.Tests/Cargohub.Tests.csproj --no-restore

      # Run Unit Tests
      - name: Run Unit Tests
        run: dotnet test Cargohub.Tests

      # Start API
      - name: Start API
        run: |
          cd Cargohub
          dotnet run --urls http://localhost:5000 &
          for i in {1..10}; do
            if curl --silent --fail http://localhost:5000/health; then break; fi
            sleep 5
          done

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      # Cache Python dependencies
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('Cargohub.Tests/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Install Python dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Cargohub.Tests/requirements.txt

      # Run Python tests
      - name: Run Python Tests
        run: pytest --maxfail=0 --disable-warnings Cargohub.Tests/ITs/

      # Optional: Aggregate results
      - name: Summarize Results
        if: always()
        run: |
          echo "Unit Tests: ${{ steps.run-unit-tests.outcome }}"
          echo "Integration Tests: ${{ steps.run-python-tests.outcome }}"
