// <auto-generated />
using System;
using Cargohub.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cargohub.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241224173401_fixvoortransfers")]
    partial class fixvoortransfers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("Cargohub.Models.Client", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("address")
                        .HasColumnType("TEXT");

                    b.Property<string>("city")
                        .HasColumnType("TEXT");

                    b.Property<string>("contact_email")
                        .HasColumnType("TEXT");

                    b.Property<string>("contact_name")
                        .HasColumnType("TEXT");

                    b.Property<string>("contact_phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("country")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("isdeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("province")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("zip_code")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Cargohub.Models.Inventory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("isdeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("item_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("item_reference")
                        .HasColumnType("TEXT");

                    b.Property<string>("locations")
                        .HasColumnType("TEXT");

                    b.Property<int?>("total_allocated")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("total_available")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("total_expected")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("total_on_hand")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("total_ordered")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("Cargohub.Models.Item", b =>
                {
                    b.Property<string>("uid")
                        .HasColumnType("TEXT");

                    b.Property<int>("ItemGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemLineId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("code")
                        .HasColumnType("TEXT");

                    b.Property<string>("commodity_code")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("isdeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("model_number")
                        .HasColumnType("TEXT");

                    b.Property<int?>("pack_order_quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("short_description")
                        .HasColumnType("TEXT");

                    b.Property<string>("supplier_code")
                        .HasColumnType("TEXT");

                    b.Property<int?>("supplier_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("supplier_part_number")
                        .HasColumnType("TEXT");

                    b.Property<int?>("unit_order_quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("unit_purchase_quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("upc_code")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("TEXT");

                    b.HasKey("uid");

                    b.HasIndex("ItemGroupId");

                    b.HasIndex("ItemLineId");

                    b.HasIndex("ItemTypeId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Cargohub.Models.ItemGroup", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("isdeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("ItemGroups");
                });

            modelBuilder.Entity("Cargohub.Models.ItemLines", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("isdeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Item_lines");
                });

            modelBuilder.Entity("Cargohub.Models.ItemType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("isdeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("ItemTypes");
                });

            modelBuilder.Entity("Cargohub.Models.Location", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("code")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("isdeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("TEXT");

                    b.Property<int?>("warehouse_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Cargohub.Models.Order", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("bill_to")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("isdeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("notes")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("order_date")
                        .HasColumnType("TEXT");

                    b.Property<string>("order_status")
                        .HasColumnType("TEXT");

                    b.Property<string>("picking_notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("reference")
                        .HasColumnType("TEXT");

                    b.Property<string>("reference_extra")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("request_date")
                        .HasColumnType("TEXT");

                    b.Property<string>("ship_to")
                        .HasColumnType("TEXT");

                    b.Property<int?>("shipment_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("shipping_notes")
                        .HasColumnType("TEXT");

                    b.Property<int?>("source_id")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("total_amount")
                        .HasColumnType("REAL");

                    b.Property<double?>("total_discount")
                        .HasColumnType("REAL");

                    b.Property<double?>("total_surcharge")
                        .HasColumnType("REAL");

                    b.Property<double?>("total_tax")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("TEXT");

                    b.Property<int?>("warehouse_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Cargohub.Models.Shipment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("carrier_code")
                        .HasColumnType("TEXT");

                    b.Property<string>("carrier_description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("isdeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("notes")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("order_date")
                        .HasColumnType("TEXT");

                    b.Property<int?>("order_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("payment_type")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("request_date")
                        .HasColumnType("TEXT");

                    b.Property<string>("service_code")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("shipment_date")
                        .HasColumnType("TEXT");

                    b.Property<string>("shipment_status")
                        .HasColumnType("TEXT");

                    b.Property<string>("shipment_type")
                        .HasColumnType("TEXT");

                    b.Property<int?>("source_id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("total_package_count")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("total_package_weight")
                        .HasColumnType("REAL");

                    b.Property<string>("transfer_mode")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("Cargohub.Models.Supplier", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("address")
                        .HasColumnType("TEXT");

                    b.Property<string>("address_extra")
                        .HasColumnType("TEXT");

                    b.Property<string>("city")
                        .HasColumnType("TEXT");

                    b.Property<string>("code")
                        .HasColumnType("TEXT");

                    b.Property<string>("contact_name")
                        .HasColumnType("TEXT");

                    b.Property<string>("country")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("isdeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("phone_number")
                        .HasColumnType("TEXT");

                    b.Property<string>("reference")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("zip_code")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("Cargohub.Models.Transfer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("isdeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("reference")
                        .HasColumnType("TEXT");

                    b.Property<int?>("transfer_from")
                        .HasColumnType("INTEGER");

                    b.Property<string>("transfer_status")
                        .HasColumnType("TEXT");

                    b.Property<int?>("transfer_to")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Transfers");
                });

            modelBuilder.Entity("Cargohub.Models.Warehouse", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("address")
                        .HasColumnType("TEXT");

                    b.Property<string>("city")
                        .HasColumnType("TEXT");

                    b.Property<string>("code")
                        .HasColumnType("TEXT");

                    b.Property<string>("country")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("isdeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("province")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("zip")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("Cargohub.Models.Item", b =>
                {
                    b.HasOne("Cargohub.Models.ItemGroup", "ItemGroup")
                        .WithMany()
                        .HasForeignKey("ItemGroupId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("Cargohub.Models.ItemLines", "ItemLine")
                        .WithMany()
                        .HasForeignKey("ItemLineId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("Cargohub.Models.ItemType", "ItemType")
                        .WithMany()
                        .HasForeignKey("ItemTypeId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("ItemGroup");

                    b.Navigation("ItemLine");

                    b.Navigation("ItemType");
                });

            modelBuilder.Entity("Cargohub.Models.Order", b =>
                {
                    b.OwnsOne("System.Collections.Generic.List<Cargohub.Models.orderItem>", "items", b1 =>
                        {
                            b1.Property<int>("Orderid")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Capacity")
                                .HasColumnType("INTEGER");

                            b1.HasKey("Orderid");

                            b1.ToTable("Orders");

                            b1.WithOwner()
                                .HasForeignKey("Orderid");
                        });

                    b.Navigation("items");
                });

            modelBuilder.Entity("Cargohub.Models.Shipment", b =>
                {
                    b.OwnsOne("System.Collections.Generic.List<Cargohub.Models.ItemShipment>", "items", b1 =>
                        {
                            b1.Property<int>("Shipmentid")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Capacity")
                                .HasColumnType("INTEGER");

                            b1.HasKey("Shipmentid");

                            b1.ToTable("Shipments");

                            b1.WithOwner()
                                .HasForeignKey("Shipmentid");
                        });

                    b.Navigation("items");
                });

            modelBuilder.Entity("Cargohub.Models.Transfer", b =>
                {
                    b.OwnsOne("System.Collections.Generic.List<Cargohub.Models.Transfer+ItemTransfers>", "items", b1 =>
                        {
                            b1.Property<int>("Transferid")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Capacity")
                                .HasColumnType("INTEGER");

                            b1.HasKey("Transferid");

                            b1.ToTable("Transfers");

                            b1.WithOwner()
                                .HasForeignKey("Transferid");
                        });

                    b.Navigation("items");
                });

            modelBuilder.Entity("Cargohub.Models.Warehouse", b =>
                {
                    b.OwnsOne("Cargohub.Models.Warehouse+Contact", "contact", b1 =>
                        {
                            b1.Property<int>("Warehouseid")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("email")
                                .HasColumnType("TEXT");

                            b1.Property<string>("name")
                                .HasColumnType("TEXT");

                            b1.Property<string>("phone")
                                .HasColumnType("TEXT");

                            b1.HasKey("Warehouseid");

                            b1.ToTable("Warehouses");

                            b1.WithOwner()
                                .HasForeignKey("Warehouseid");
                        });

                    b.Navigation("contact");
                });
#pragma warning restore 612, 618
        }
    }
}
